buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE" )
	}
}



apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.dz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
ext['hibernate.version'] = '5.2.11.Final' //추가

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf:2.0.4.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-actuator')

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-test:2.0.1.RELEASE')
	compile('org.springframework.boot:spring-boot-devtools:2.0.4.RELEASE')

	compile('junit:junit:4.12')
	compile('org.springframework.boot:spring-boot-test:2.0.6.RELEASE')
	compile('org.springframework:spring-test:5.0.10.RELEASE')

	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1') // MyBatis 라이브러리
	compile('org.hibernate:hibernate-entitymanager:5.3.6.Final')
	compile('org.hibernate:hibernate-core:5.3.6.Final')
	compile('javax.xml.bind:jaxb-api:2.3.0')
	compile('mysql:mysql-connector-java')
	compileOnly('org.projectlombok:lombok')
	runtimeOnly('com.h2database:h2')
}

subprojects {
	group 'com.blogcode'
	version '1.0'

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	dependencies {
		testCompile group: 'junit', name: 'junit', version: '4.12'
	}
}

project(':module-admin') {
	dependencies {
		compile project(':module-admin')
	}
}

project(':module-api') {
	dependencies {
		compile project(':module-api')
	}
}

project(':module-batch') {
	dependencies {
		compile project(':module-batch')
	}
}